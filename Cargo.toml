[workspace]
members = ["src/plugins/*", "src/macros", "src/testing", "src/zyheeda_core"]

[workspace.package]
version = "0.1.0"
edition = "2024"

[workspace.dependencies]
# external
bevy = { version = "0.16.0", features = ["serialize"] }
bevy-inspector-egui = "0.31.0"
bevy_rapier3d = { version = "0.30.0", features = ["serde-serialize"] }
fluent = "0.16.1"
fluent-syntax = "0.11.1"
mockall = "=0.13.1"
serde = "1.0.219"
serde_json = "1.0.140"
tracing = "0.1.41"
unic-langid = { version = "0.9.6", features = ["macros"] }
uuid = "1.16.0"
test-case = "3.3.1"

# internal
common = { path = "src/plugins/common" }
macros = { path = "src/macros" }
testing = { path = "src/testing" }
zyheeda_core = { path = "src/zyheeda_core" }

[profile.test]
opt-level = 0

[profile.test.package."*"]
opt-level = 0

[profile.dev]
opt-level = 1

[profile.dev.package."*"]
opt-level = 3

[package]
name = "project-zyheeda"
version.workspace = true
edition.workspace = true

[dependencies]
# external
bevy.workspace = true
bevy-inspector-egui.workspace = true
bevy_rapier3d.workspace = true
fluent.workspace = true
fluent-syntax.workspace = true
serde.workspace = true
serde_json.workspace = true
tracing.workspace = true
unic-langid.workspace = true
uuid.workspace = true

# internal plugin crates
animations = { path = "src/plugins/animations" }
bars = { path = "src/plugins/bars" }
behaviors = { path = "src/plugins/behaviors" }
camera_control = { path = "src/plugins/camera_control" }
common.workspace = true
enemy = { path = "src/plugins/enemy" }
frame_limiter = { path = "src/plugins/frame_limiter" }
light = { path = "src/plugins/light" }
loading = { path = "src/plugins/loading" }
localization = { path = "src/plugins/localization" }
map_generation = { path = "src/plugins/map_generation" }
menu = { path = "src/plugins/menu" }
path_finding = { path = "src/plugins/path_finding" }
physics = { path = "src/plugins/physics" }
player = { path = "src/plugins/player" }
graphics = { path = "src/plugins/graphics" }
savegame = { path = "src/plugins/savegame" }
settings = { path = "src/plugins/settings" }
skills = { path = "src/plugins/skills" }

# internal crates
macros.workspace = true
zyheeda_core.workspace = true

[dev-dependencies]
# external
mockall.workspace = true
test-case.workspace = true

# internal
testing.workspace = true
